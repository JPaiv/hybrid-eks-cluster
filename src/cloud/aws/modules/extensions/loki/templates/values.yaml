deploymentMode: Distributed

loki:
  auth_enabled: false
  schemaConfig:
    configs:
      - from: "2024-04-01"
        object_store: s3
        schema: v13
        store: tsdb
        index:
          prefix: loki_index_
          period: 24h
  storage_config:
    aws:
      bucketnames: ${chunks_bucket_id}
      region: ${region}
      s3forcepathstyle: true
  ingester:
    chunk_encoding: snappy
  pattern_ingester:
    enabled: true
  limits_config:
    allow_structured_metadata: true
    retention_period: 672h # -- 28 days retention
    volume_enabled: true
  compactor:
    delete_request_store: s3
    retention_enabled: true
  memcached:
    chunk_cache:
      enabled: false
    results_cache:
      enabled: false
  ruler:
    enable_api: true
    storage:
      type: s3
      s3:
        bucketnames: ${ruler_bucket_id}
        region: ${region}
        s3forcepathstyle: false
  querier:
    max_concurrent: 4
  storage:
    type: s3
    bucketNames:
      chunks: ${chunks_bucket_id}
      ruler: ${ruler_bucket_id}
    s3:
      region: ${region}

serviceAccount:
  create: true
  name: ${irsa_name}
  annotations:
    eks.amazonaws.com/role-arn: ${irsa_arn}
  labels:
    app.kubernetes.io/component: loki
    app.kubernetes.io/instance: irsa
    app.kubernetes.io/managed-by: tofu-elm
    app.kubernetes.io/name: ${id_label}
    app.kubernetes.io/part-of: monitoring
    app.kubernetes.io/stage: ${stage}
    app.kubernetes.io/version: ${chart_version}

chunksCache:
  enabled: false

ingester:
  replicas: 1
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 6
  persistence:
    accessModes:
      - ReadWriteOnce
    size: 20Gi
    storageClass: ${id_label}

querier:
  replicas: 1
  autoscaling:
    enabled: true
    maxReplicas: 6
    minReplicas: 2
  persistence:
    storageClass: ${id_label}
    accessModes:
      - ReadWriteOnce
    size: 10Gi

queryFrontend:
  replicas: 1
  autoscaling:
    enabled: true
    maxReplicas: 6
    minReplicas: 2

queryScheduler:
  replicas: 2

distributor:
  replicas: 1
  autoscaling:
    enabled: true
    maxReplicas: 6
    minReplicas: 2
    targetCPUUtilizationPercentage: 80
  resources:
    limits:
      cpu: 600m
      memory: 600Mi
    requests:
      cpu: 200m
      memory: 200Mi

compactor:
  replicas: 2
  resources:
    limits:
      cpu: 600m
      memory: 600Mi
    requests:
      cpu: 200m
      memory: 200Mi
  persistence:
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    storageClass: ${id_label}

indexGateway:
  replicas: 2
  maxUnavailable: 1
  persistence:
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    storageClass: ${id_label}

ruler:
  replicas: 1
  maxUnavailable: 1
  persistence:
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    storageClass: ${id_label}

gateway:
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 6
  basicAuth:
    enabled: false
    username: null
    password: null
  service:
    type: ClusterIP
    labels:
      app.kubernetes.io/component: loki
      app.kubernetes.io/instance: gateway
      app.kubernetes.io/managed-by: tofu-helm
      app.kubernetes.io/name: ${id_label}
      app.kubernetes.io/part-of: monitoring
      app.kubernetes.io/stage: ${stage}
      app.kubernetes.io/version: ${chart_version}
  ingress:
    enabled: true
    ingressClassName: alb
    annotations:
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
      alb.ingress.kubernetes.io/healthcheck-path: "/"
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80, "HTTPS": 443}]'
      alb.ingress.kubernetes.io/load-balancer-name: "${id_label}-gateway"
      alb.ingress.kubernetes.io/scheme: internal
      alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-FS-1-2-2019-08
      alb.ingress.kubernetes.io/tags: helm=true,name=${id_label},stage=${stage},team=DevSecOps,tofu=true
      alb.ingress.kubernetes.io/target-type: ip
    labels:
      app.kubernetes.io/component: loki
      app.kubernetes.io/instance: gateway
      app.kubernetes.io/managed-by: tofu-helm
      app.kubernetes.io/name: ${id_label}
      app.kubernetes.io/part-of: monitoring
      app.kubernetes.io/stage: ${stage}
      app.kubernetes.io/version: ${chart_version}
    hosts:
      - host: ${domain_name}
        paths:
          - path: /
            pathType:
              Prefix
    tls:
      - hosts:
          - ${domain_name}

lokiCanary:
  enabled: true

backend:
  replicas: 0
minio:
  enabled: false
read:
  replicas: 0
singleBinary:
  replicas: 0
write:
  replicas: 0
